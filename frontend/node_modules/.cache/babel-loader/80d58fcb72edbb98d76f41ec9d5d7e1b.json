{"ast":null,"code":"async function httpGetPlanets() {\n  // TODO: Once API is ready.\n  fetch(\"http://localhost:8000/planets\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    console.log(response.json());\n  });\n}\n\nasync function httpGetLaunches() {// TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {// TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {// TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"sources":["/Users/erickelnino/Desktop/ZTM NodeJS 2024/09.nasa_project/nasa_project_101/frontend/src/hooks/requests.js"],"names":["httpGetPlanets","fetch","method","headers","then","response","console","log","json","httpGetLaunches","httpSubmitLaunch","launch","httpAbortLaunch","id"],"mappings":"AAAA,eAAeA,cAAf,GAAgC;AAC9B;AACAC,EAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,IAAAA,MAAM,EAAE,KAD6B;AAErCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAF4B,GAAlC,CAAL,CAKGC,IALH,CAKSC,QAAD,IAAc;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,EAAZ;AACD,GAPD;AAQD;;AAED,eAAeC,eAAf,GAAiC,CAC/B;AACA;AACD;;AAED,eAAeC,gBAAf,CAAgCC,MAAhC,EAAwC,CACtC;AACA;AACD;;AAED,eAAeC,eAAf,CAA+BC,EAA/B,EAAmC,CACjC;AACA;AACD;;AAED,SAASb,cAAT,EAAyBS,eAAzB,EAA0CC,gBAA1C,EAA4DE,eAA5D","sourcesContent":["async function httpGetPlanets() {\n  // TODO: Once API is ready.\n  fetch(\"http://localhost:8000/planets\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    console.log(response.json());\n  });\n}\n\nasync function httpGetLaunches() {\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  // TODO: Once API is ready.\n  // Submit given launch data to launch system.\n}\n\nasync function httpAbortLaunch(id) {\n  // TODO: Once API is ready.\n  // Delete launch with given ID.\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"]},"metadata":{},"sourceType":"module"}